- limited to 12 pages
- will be converted to pdf
grading based on:
- project design (images help)
- tradeoffs, choices and why?
- description of flow of control within submission
- explain tests you've developed and tests you've used by didn't develop
- this should be every bit of code that you used but did not write, this includes code, show off resources used (articles), 
    Thus, this would include articles on Stack Overflow, any repositories you referenced on github.com, any
    books you used, any manual pages you consulted
In addition, you have an opportunity to earn extra credit.  To do so, we want to see something that
adds value to the project.  Observing that there is a problem or issue _is not enough_.  We want
something that is easily actioned.  Examples of this include:
- Suggestions for additional tests, along with an explanation of _how_ you envision it being tested
- Suggested revisions to the instructions, code, comments, etc.  It's not enough to say "I found
  this confusing" - we want you to tell us what you would have said _instead_.
While we do award extra credit, we do so sparingly.


# Echo (warmup)
- message no longer than 15 bytes. Allocate char buffer[16];
- only output should be response from server

I first started this part of the project by creating the server. I started with the getaddrinfo() function where all the information I need regarding my server is nicely
compacted into a struct for later use. I had to do some extra work to make sure the arguments passed in worked as intended. This included converting the port that was assigned by the 
skeleton code back to a char array and creating an addrinfo struct to assign some hints such as allowing both IPv4/IPv6, setting sockets to TCP, and filling in the IP to localhost. 

References: 
- Beej's guide to Network Programming: used as a guide to create the client/server system calls
- https://stackoverflow.com/questions/8257714/how-can-i-convert-an-int-to-a-string-in-c : helped me understand 
- https://stackoverflow.com/questions/5106674/error-address-already-in-use-while-binding-socket-with-address-but-the-port-num : fixed issue where I'd receive "addres in use" when trying to open a socket on the same address/port


fgets clears the buffer for you, 



# Transfer File

